4. MÓDULO: ⚙️ Control de Bomba Automática (Manual + Umbral %)

Este módulo incluye:

Botones de encendido manual (ON / OFF)

Umbral de llenado: “encender bomba si nivel < X%”

Vista clara de estado actual de la bomba

📍 Pega esto dentro de #bomba (reemplaza todo su contenido):
<h2 class="text-2xl font-bold mb-4">⚙️ Control de Bomba Automática</h2>

<div class="bg-white rounded-lg p-6 shadow-md max-w-xl space-y-4">
  <div>
    <label class="block text-sm font-medium text-gray-700 mb-1">Encender bomba automáticamente si el nivel es menor a:</label>
    <div class="flex items-center gap-2">
      <input id="umbralAuto" type="number" value="30" min="5" max="95" class="w-20 border px-2 py-1 rounded text-center" />
      <span class="text-sm text-gray-600">%</span>
    </div>
  </div>

  <div class="mt-4">
    <h4 class="text-sm font-semibold text-gray-800 mb-1">Encendido Manual</h4>
    <div class="flex gap-4">
      <button onclick="encenderBomba(true)" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded">Encender</button>
      <button onclick="encenderBomba(false)" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded">Apagar</button>
    </div>
  </div>

  <div class="mt-4">
    <span class="text-sm text-gray-500">Estado actual de la bomba:</span>
    <div id="estadoBomba" class="text-lg font-bold text-blue-600">Desconectada</div>
  </div>
</div>

🔧 Agrega esta función en app.js:
function encenderBomba(estado) {
  const estadoTexto = estado ? "Encendida" : "Apagada";
  const color = estado ? "text-green-600" : "text-red-600";
  const div = document.getElementById("estadoBomba");

  div.textContent = estadoTexto;
  div.className = "text-lg font-bold " + color;

  // Aquí puedes agregar una llamada real al ESP32 si ya está conectado
  // Ejemplo:
  // fetch(`/api/bomba`, { method: "POST", body: JSON.stringify({ encender: estado }) })

  console.log(`Bomba ${estado ? "ENCENDIDA" : "APAGADA"}`);
}


🧠 En el futuro, conectamos este botón a una API real (/api/bomba) que hable con el ESP32.

✅ 5. MÓDULO: 🤖 Asistente IA

Este será un chat visual simple, donde el cliente puede escribir dudas y la IA responde con información útil de la app.

📍 Pega esto dentro de #ia:
<h2 class="text-2xl font-bold mb-4">🤖 Asistente Inteligente</h2>

<div class="bg-white rounded-lg p-6 shadow-md max-w-xl space-y-4">
  <div id="chatBot" class="h-64 overflow-y-auto bg-gray-100 p-3 rounded text-sm text-gray-800 space-y-2 border border-gray-300">
    <div class="font-semibold text-blue-600">🤖 InstalaBot:</div>
    <div>Hola, ¿en qué puedo ayudarte? Puedes preguntar por ejemplo:</div>
    <ul class="list-disc pl-5 text-gray-700">
      <li>¿Cómo se instala el sensor?</li>
      <li>¿Cuánto cuesta instalar un tinaco?</li>
      <li>¿Qué hace la bomba automática?</li>
    </ul>
  </div>

  <div class="flex gap-2">
    <input id="inputIA" type="text" placeholder="Escribe tu pregunta..." class="flex-1 border px-3 py-2 rounded" />
    <button onclick="responderIA()" class="bg-indigo-600 text-white px-4 py-2 rounded">Enviar</button>
  </div>
</div>

🔧 Lógica simple de respuestas (agrega al final de app.js):
function responderIA() {
  const input = document.getElementById("inputIA");
  const chat = document.getElementById("chatBot");
  const pregunta = input.value.trim().toLowerCase();

  if (!pregunta) return;

  // Mostrar mensaje del usuario
  chat.innerHTML += `<div class="text-right text-sm text-green-600">🧑 Tú: ${pregunta}</div>`;

  // Respuestas básicas
  let respuesta = "Lo siento, no entendí eso. Intenta preguntar de otra forma.";
  if (pregunta.includes("sensor")) {
    respuesta = "El sensor se coloca en la parte superior del tinaco. Se conecta por cable al ESP32 que va protegido en una caja cerca del tinaco.";
  } else if (pregunta.includes("bomba")) {
    respuesta = "La bomba automática se enciende sola si el agua baja del nivel que tú configures. También puedes encenderla manualmente desde la app.";
  } else if (pregunta.includes("tinaco")) {
    respuesta = "Tenemos varias opciones de instalación. El costo depende de los materiales, pero puedes usar la sección de Cotización para obtener el precio exacto.";
  }

  // Mostrar respuesta
  chat.innerHTML += `<div class="text-sm text-blue-600">🤖 InstalaBot: ${respuesta}</div>`;
  input.value = "";
  chat.scrollTop = chat.scrollHeight;
}

🎯 Resultado final

Con esto ya tienes:

✅ Sección de bomba visual y funcional
✅ Sección de IA con chatbot informativo y expandible
✅ Toda la interfaz conectada a los menús laterales