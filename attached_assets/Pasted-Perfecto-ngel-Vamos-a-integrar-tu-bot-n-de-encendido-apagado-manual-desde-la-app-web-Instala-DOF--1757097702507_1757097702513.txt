Perfecto, √Ångel. Vamos a integrar tu bot√≥n de encendido/apagado manual desde la app web Instala DOF para que le mande el comando al ESP32 COM4 (192.168.100.39) en red local.

‚úÖ Objetivo

Cuando desde tu app web se haga clic en un bot√≥n (por ejemplo, ‚ÄúEncender‚Äù o ‚ÄúApagar‚Äù), se enviar√° un POST a:

http://192.168.100.39/api/orden-rele


con el cuerpo:

encender


o

apagar


Tu ESP32 COM4 ya est√° listo para recibir esto.

üß† ¬øQu√© partes necesitamos?

‚úÖ Ruta en el backend de Replit (Node.js) para recibir el clic del usuario.

‚úÖ Esa ruta usa Axios para enviar el POST al ESP32 COM4.

‚úÖ Tu frontend hace fetch("/api/relays/manual", {comando: "encender"}).

üîß PASO 1: Ruta en el backend (Node.js / Express)

Crea un archivo o edita routes/relays.js:

// routes/relays.js
const express = require("express");
const router = express.Router();
const axios = require("axios");

// IP del ESP32 COM4 (rel√©)
const RELAY_IP = "http://192.168.100.39";

router.post("/manual", async (req, res) => {
  const comando = req.body.comando;

  if (!["encender", "apagar"].includes(comando)) {
    return res.status(400).json({ error: "Comando inv√°lido" });
  }

  try {
    const respuesta = await axios.post(`${RELAY_IP}/api/orden-rele`, comando, {
      headers: { "Content-Type": "text/plain" }
    });

    res.json({ status: "ok", respuesta: respuesta.data });
  } catch (error) {
    console.error("‚ùå Error al contactar al ESP32 COM4:", error.message);
    res.status(500).json({ error: "No se pudo contactar al ESP32", detalle: error.message });
  }
});

module.exports = router;

PASO 2: Conectar la ruta en tu index.js

Aseg√∫rate de tener esto en tu archivo principal:

const relayRoutes = require("./routes/relays");
app.use("/api/relays", relayRoutes);

üéØ PASO 3: Bot√≥n en tu frontend (HTML + JavaScript)

Aqu√≠ tienes un ejemplo simple de bot√≥n en HTML que llama la ruta manual:

<button onclick="encenderBomba()">Encender Bomba</button>
<button onclick="apagarBomba()">Apagar Bomba</button>

<script>
  function encenderBomba() {
    enviarComando("encender");
  }

  function apagarBomba() {
    enviarComando("apagar");
  }

  async function enviarComando(comando) {
    const res = await fetch("/api/relays/manual", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ comando })
    });

    const data = await res.json();
    console.log("Respuesta del backend:", data);
    alert("Bomba: " + data.respuesta);
  }
</script>

‚úÖ ¬øQu√© va a pasar ahora?

Clic en bot√≥n "Encender" ‚Üí frontend llama a /api/relays/manual ‚Üí backend ‚Üí ESP32 COM4.

Si todo est√° bien, ver√°s en el Serial del COM4:

üì• Orden recibida: encender
‚ö°Ô∏è Rel√© ENCENDIDO

üö® NOTA IMPORTANTE

Este m√©todo solo funcionar√° si tu backend est√° en la misma red local que el ESP32 COM4 (por ejemplo, en tu laptop, o en Replit con un t√∫nel).